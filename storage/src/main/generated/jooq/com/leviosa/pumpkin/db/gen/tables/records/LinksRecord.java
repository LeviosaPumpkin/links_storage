/*
 * This file is generated by jOOQ.
 */
package com.leviosa.pumpkin.db.gen.tables.records;


import com.leviosa.pumpkin.db.gen.tables.Links;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LinksRecord extends UpdatableRecordImpl<LinksRecord> implements Record4<Long, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>links_storage.links.link_id</code>.
     */
    public void setLinkId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>links_storage.links.link_id</code>.
     */
    public Long getLinkId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>links_storage.links.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>links_storage.links.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>links_storage.links.link_name</code>.
     */
    public void setLinkName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>links_storage.links.link_name</code>.
     */
    public String getLinkName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>links_storage.links.description</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>links_storage.links.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Links.LINKS.LINK_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Links.LINKS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Links.LINKS.LINK_NAME;
    }

    @Override
    public Field<String> field4() {
        return Links.LINKS.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getLinkId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getLinkName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getLinkId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getLinkName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public LinksRecord value1(Long value) {
        setLinkId(value);
        return this;
    }

    @Override
    public LinksRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public LinksRecord value3(String value) {
        setLinkName(value);
        return this;
    }

    @Override
    public LinksRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public LinksRecord values(Long value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LinksRecord
     */
    public LinksRecord() {
        super(Links.LINKS);
    }

    /**
     * Create a detached, initialised LinksRecord
     */
    public LinksRecord(Long linkId, Integer userId, String linkName, String description) {
        super(Links.LINKS);

        setLinkId(linkId);
        setUserId(userId);
        setLinkName(linkName);
        setDescription(description);
    }
}
